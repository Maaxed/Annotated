private static final String PROTOCOL_VERSION = "${protocolVersion}";
public static final SimpleChannel CHANNEL = NetworkRegistry.ChannelBuilder
		.named(new ResourceLocation("${channelName}"))
		.clientAcceptedVersions(PROTOCOL_VERSION::equals)
		.serverAcceptedVersions(PROTOCOL_VERSION::equals)
		.networkProtocolVersion(() -> PROTOCOL_VERSION)
		.simpleChannel();

private static final Map<String, Consumer<AtomicInteger>> registry = new TreeMap<>();

public static void registerNetwork(String uniqueId, Consumer<AtomicInteger> networkRegistry)
{
	registry.put(uniqueId, networkRegistry);
}

@SubscribeEvent(priority = EventPriority.LOW)
public static void registerAllPackets(FMLCommonSetupEvent event)
{
	AtomicInteger nextIndex = new AtomicInteger(0);
	registerPackets(nextIndex);
	registry.values().forEach(network -> network.accept(nextIndex));
}