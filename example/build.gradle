plugins {
	id 'com.diffplug.eclipse.apt' version '3.36.2'
}

ext {
	projectName = "$rootProject.baseProjectName-Example"
	version = rootProject.apiVersion
}
apply from: rootProject.file('/forge_dependency.gradle')

group = "${rootProject.group}.example"

repositories {
	flatDir {
		dirs 'libs'
	}
}

dependencies {
	compileOnly "fr.max2.annotated:Annotated-API:${rootProject.apiVersion}"
	implementation "fr.max2.annotated:Annotated-Lib:${rootProject.libVersion}"
	annotationProcessor "fr.max2.annotated:Annotated-Processor:${rootProject.processorVersion}"
}


minecraft {
	runs {
		client {
			workingDirectory project.file('run/client')
            taskName "$project.name-runClient"

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			mods {
				annotatedexample {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run/server')
            taskName "$project.name-runServer"

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			mods {
				annotatedexample {
					source sourceSets.main
				}
			}
		}
	}
}

eclipseFactorypath.mustRunAfter(cleanEclipseFactorypath)

eclipse {
	// Set the location of the generated source files
	jdt.apt.genSrcDir = file('src-gen/main/java')
	jdt.apt.genTestSrcDir = file('src-gen/test/java')

	// Set the output of the generated classes
	classpath.file.whenMerged {
		entries.findAll { it.kind == 'output' } *.path = 'bin/main'
	}

	synchronizationTasks eclipseJdtApt, eclipseJdt, cleanEclipseFactorypath, eclipseFactorypath
}
